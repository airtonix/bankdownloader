name: PRTestChecks

on:
  pull_request:
    # types:
    #   - opened
    #   - reopened
    #   - edited
    #   - synchronize

permissions:
  contents: write
  pull-requests: write

# ensure only one PRTest check runs at a time
concurrency:
  group: prtest
  cancel-in-progress: true


jobs:

  PrTitle:
    runs-on: ubuntu-latest
    permissions:
      statuses: write
    
      # if not using nekox/act and the user is airtonix, allow the action to run
      
    steps:
      - uses: aslafy-z/conventional-pr-title-action@v3
        if: ${{ !github.event.act }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  LintAndTest:

    runs-on: ubuntu-latest

    # don't bother running if the PR title is invalid
    needs: [PrTitle]

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: setup jetpack devbox
        uses: jetpack-io/devbox-install-action@v0.7.0

      - name: Print Google Chrome Info
        run: |
          devbox run -- which chromium
          devbox run -- chromium --version
          devbox run -- chromium --product-version

      - name: Install Problem Matcher
        run: |
          echo "::add-matcher::./.github/problem-matcher.json"

      - name: Lint
        run: devbox run -- just lint

      - name: Test
        run: devbox run -- just test

      - name: Remove Problem Matcher
        run: |
          echo "::remove-matcher owner=go::"

      - name: gcov2lcov-action
        uses: jandelgado/gcov2lcov-action@v1.0.9
        with:
          infile: coverage.txt
          outfile: coverage.lcov

      - name: Code Coverage Reporter Action
        if: ${{ !github.event.act }}
        uses: acid-chicken/code-coverage-reporter-action@v0.4.1
        with:
          lcov-file: ./coverage.lcov
          

      - name: Build  
        run: devbox run -- just build

      - name: Upload Artifacts
        if: ${{ !github.event.act }}
        uses: actions/upload-artifact@v3
        with:
          path: |
            dist/**/*
            !dist/**/*.json
            !dist/**/*.yaml

      - name: List Artifacts
        id: list-artifacts
        # make a list of files in the dist/ directory
        # exclude from the list the following types of files: json files, yaml files, the dist/ directory itself, empty directories, symlinks, and txt files
        run: |
          files=$(find dist -type f -printf '%P\n'  | grep -v -E '\.json$|\.yaml$|^dist$|^$|->|\.txt$')
          echo "files=${files}" >> $GITHUB_OUTPUT

      - name: Link Artifacts
        if: ${{ !github.event.act }}
        uses: GrantBirki/comment@v2.0.8
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          comment-id: artifact-preview-links
          edit-mode: replace
          vars: |
            files: ${{ steps.list-artifacts.outputs.files }}
          body: |
            ### Preview Build

            | Name | link |
            {% for file in files.split(",") %}
            | {{ file.name }} | {{ file.url }} |
            {% else %}
            - No file
            {% endfor %}
          