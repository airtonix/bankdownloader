{
  "$id": "https://raw.github.com/airtonix/bankdownloader/config/schema.json",
  "title": "Bank Downloader",
  "description": "Bank Downloader configuration",
  "type": "object",
  "properties": {
    "dateFormat": {
      "type": "string",
      "description": "date format used in the history file",
      "default": "%Y-%m-%d"
    },
    "sources": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "name of the downloader to use",
            "minLength": 1
          },
          "config": {
            "$ref": "#/$defs/source-config"
          },
          "accounts": {
            "type": "array",
            "description": "accounts to download",
            "items": {
              "$ref": "#/$defs/source-account"
            }
          }
        },
        "required": [
          "name", "config", "accounts"
        ],
        "additionalProperties": false
      },
      "minItems": 0
    }
  },
  "required": [
    "sources"
  ],
  "$defs": {
    "source-account": {
      "$id": "source-account",
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "name of the account",
          "minLength": 1
        },
        "number": {
          "type": "string",
          "description": "account number",
          "minLength": 1
        }
      }
    },
    "source-config": {
      "$id": "source-config",
      "type": "object",
      "description": "configuration for the downloader",
      "minLength": 1,
      "properties": {
        "format": {
          "type": "string",
          "description": "Which format should be selected to download",
          "minLength": 1
        },
        "daysToFetch": {
          "type": "integer",
          "description": "number of days to fetch",
          "minimum": 1
        },
        "historyStrategy": {
          "type": "string",
          "description": "strategy to use when downloading history",
          "enum": [
            "days-ago",
            "since-last-event"
          ]
        },
        "domain": {
          "type": "string",
          "description": "domain to use when downloading",
          "minLength": 1
        },
        "outputTemplate": {
          "type": "string",
          "description": "template to use when generating the output file",
          "minLength": 1
        },
        "credentialsSource": {
          "enum": [
            "file",
            "env",
            "gopass",
            "keychain",
            "env-totp",
            "gopass-totp",
            "keychain-totp"
          ]
        }
      },
      "allOf": [
        {
          "if": {
            "properties": {
              "credentialsSource": {
                "enum": [
                  "file"
                ]
              }
            }
          },
          "then": {
            "properties": {
              "credentials": {
                "$ref": "#/$defs/credentials-file"
              }
            },
            "required": [
              "credentials"
            ]
          }
        },
        {
          "if": {
            "properties": {
              "credentialsSource": {
                "enum": [
                  "env"
                ]
              }
            }
          },
          "then": {
            "properties": {
              "credentials": {
                "$ref": "#/$defs/credentials-env"
              }
            },
            "required": [
              "credentials"
            ]
          }
        },
        {
          "if": {
            "properties": {
              "credentialsSource": {
                "enum": [
                  "gopass"
                ]
              }
            }
          },
          "then": {
            "properties": {
              "credentials": {
                "$ref": "#/$defs/credentials-gopass"
              }
            },
            "required": [
              "credentials"
            ]
          }
        },
        {
          "if": {
            "properties": {
              "credentialsSource": {
                "enum": [
                  "keychain"
                ]
              }
            }
          },
          "then": {
            "properties": {
              "credentials": {
                "$ref": "#/$defs/credentials-keychain"
              }
            },
            "required": [
              "credentials"
            ]
          }
        },
        {
          "if": {
            "properties": {
              "credentialsSource": {
                "enum": [
                  "env-totp"
                ]
              }
            }
          },
          "then": {
            "properties": {
              "credentials": {
                "$ref": "#/$defs/credentials-env-totp"
              }
            },
            "required": [
              "credentials"
            ]
          }
        },
        {
          "if": {
            "properties": {
              "credentialsSource": {
                "enum": [
                  "gopass-totp"
                ]
              }
            }
          },
          "then": {
            "properties": {
              "credentials": {
                "$ref": "#/$defs/credentials-gopass-totp"
              }
            },
            "required": [
              "credentials"
            ]
          }
        },
        {
          "if": {
            "properties": {
              "credentialsSource": {
                "enum": [
                  "keychain-totp"
                ]
              }
            }
          },
          "then": {
            "properties": {
              "credentials": {
                "$ref": "#/$defs/credentials-keychain-totp"
              }
            },
            "required": [
              "credentials"
            ]
          }
        }
      ]
    },
    "credentials-file": {
      "$id": "credentials-file",
      "type": "object",
      "description": "credentials that are baked into the configuration file",
      "properties": {
        "username": {
          "type": "string",
          "minLength": 1
        },
        "password": {
          "type": "string",
          "minLength": 1
        }
      }
    },
    "credentials-env": {
      "$id": "credentials-env",
      "type": "object",
      "description": "credentials that are read from the environment",
      "properties": {
        "usernameKey": {
          "type": "string",
          "minLength": 1
        },
        "passwordKey": {
          "type": "string",
          "minLength": 1
        }
      }
    },
    "credentials-gopass": {
      "$id": "credentials-gopass",
      "type": "object",
      "description": "credentials that are read from gopass",
      "properties": {
        "usernameKey": {
          "type": "string",
          "minLength": 1
        },
        "passwordKey": {
          "type": "string",
          "minLength": 1
        }
      }
    },
    "credentials-keychain": {
      "$id": "credentials-keychain",
      "type": "object",
      "description": "credentials that are read from the keychain",
      "properties": {
        "usernameKey": {
          "type": "string",
          "minLength": 1
        },
        "passwordKey": {
          "type": "string",
          "minLength": 1
        }
      }
    },
    "credentials-env-totp": {
      "$id": "credentials-env-totp",
      "type": "object",
      "description": "credentials that are read from the environment",
      "properties": {
        "username": {
          "type": "string",
          "minLength": 1
        },
        "password": {
          "type": "string",
          "minLength": 1
        },
        "totp": {
          "type": "string",
          "minLength": 1
        }
      }
    },
    "credentials-gopass-totp": {
      "$id": "credentials-gopass-totp",
      "type": "object",
      "description": "credentials that are read from gopass",
      "properties": {
        "username": {
          "type": "string",
          "minLength": 1
        },
        "password": {
          "type": "string",
          "minLength": 1
        },
        "totp": {
          "type": "string",
          "minLength": 1
        }
      }
    },
    "credentials-keychain-totp": {
      "$id": "credentials-keychain-totp",
      "type": "object",
      "description": "credentials that are read from the keychain",
      "properties": {
        "username": {
          "type": "string",
          "minLength": 1
        },
        "password": {
          "type": "string",
          "minLength": 1
        },
        "totp": {
          "type": "string",
          "minLength": 1
        }
      }
    }
  }
}